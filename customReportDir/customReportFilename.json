{
  "stats": {
    "suites": 7,
    "tests": 12,
    "passes": 11,
    "pending": 1,
    "failures": 0,
    "start": "2023-08-11T11:23:09.423Z",
    "end": "2023-08-11T11:23:15.492Z",
    "duration": 6069,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 8.333333333333332,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8253d2b3-19ce-44d8-a7f5-8fd9308528b9",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "841394ab-7641-46b6-93d6-b476be69781e",
          "title": "Test Backend APIs",
          "fullFile": "/home/mind/practice/TEST_CASE/test/test-case/api.spec.js",
          "file": "/test/test-case/api.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "get user list api",
              "fullTitle": "Test Backend APIs get user list api",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n  .request(server)\n  .get(\"/user-list\")\n  .end((err, response) => {\n    expect(response.status).to.be.equal(200);\n    expect(response.body).to.have.all.keys(\"data\", \"msg\");\n    done();\n  });",
              "err": {},
              "uuid": "a9053cbb-2d69-452b-ab86-86fcb326b1c2",
              "parentUUID": "841394ab-7641-46b6-93d6-b476be69781e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9053cbb-2d69-452b-ab86-86fcb326b1c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "77ad9514-75c5-4c57-89cd-d52d2459b149",
          "title": ">>>> Heading 1",
          "fullFile": "/home/mind/practice/TEST_CASE/test/test-case/hook.spec.js",
          "file": "/test/test-case/hook.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: ---first in \">>>> Heading 1\"",
              "fullTitle": ">>>> Heading 1 \"before all\" hook: ---first in \">>>> Heading 1\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\">>>>>> Run first\");",
              "err": {},
              "uuid": "60e76c50-07c7-406d-b74c-a803fe3c2670",
              "parentUUID": "77ad9514-75c5-4c57-89cd-d52d2459b149",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: ---last in \">>>> Heading 1\"",
              "fullTitle": ">>>> Heading 1 \"after all\" hook: ---last in \">>>> Heading 1\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\">>>>>> Run last\");",
              "err": {},
              "uuid": "27da41b2-4b32-47e0-87c5-54ff67e5ecbd",
              "parentUUID": "77ad9514-75c5-4c57-89cd-d52d2459b149",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "test code 1",
              "fullTitle": ">>>> Heading 1 test code 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"test case\");",
              "err": {},
              "uuid": "f7bff6b0-4c4e-4b55-b362-9610d25f4c48",
              "parentUUID": "77ad9514-75c5-4c57-89cd-d52d2459b149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test code 2",
              "fullTitle": ">>>> Heading 1 test code 2",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "296bf4c9-89a1-441e-b5e2-6debf57a530d",
              "parentUUID": "77ad9514-75c5-4c57-89cd-d52d2459b149",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test code 3",
              "fullTitle": ">>>> Heading 1 test code 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(\"test case\");",
              "err": {},
              "uuid": "848a3269-d0bb-400b-b37a-0f793fc5875a",
              "parentUUID": "77ad9514-75c5-4c57-89cd-d52d2459b149",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7bff6b0-4c4e-4b55-b362-9610d25f4c48",
            "848a3269-d0bb-400b-b37a-0f793fc5875a"
          ],
          "failures": [],
          "pending": [
            "296bf4c9-89a1-441e-b5e2-6debf57a530d"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1b9927be-4ce3-4295-9166-77dcb2b2c88b",
          "title": "MOCK : ",
          "fullFile": "/home/mind/practice/TEST_CASE/test/test-case/mock.spec.js",
          "file": "/test/test-case/mock.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "count function",
              "fullTitle": "MOCK :  count function",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mock = sinon.mock(studentObj);\nvar expt = mock.expects(\"getExternal\");\nexpt.exactly(1);\nexpt.withArgs(40);\nstudentObj.finalmarks(40);\nmock.verify();",
              "err": {},
              "uuid": "413dad64-3577-419b-9192-97ed8ccda644",
              "parentUUID": "1b9927be-4ce3-4295-9166-77dcb2b2c88b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "413dad64-3577-419b-9192-97ed8ccda644"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "38aa60b3-e7c9-4265-8a43-9fc2d72d86a6",
          "title": "Nocks : test case",
          "fullFile": "/home/mind/practice/TEST_CASE/test/test-case/nock.spec.js",
          "file": "/test/test-case/nock.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "using Nock test api",
              "fullTitle": "Nocks : test case using Nock test api",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const obj = {\n  userId: 1,\n  id: 1,\n  title: \"delectus aut autem\",\n  completed: false,\n};\nconst scope = nock(\"https://jsonplaceholder.typicode.com\")\n  .get(\"/todos/1\")\n  .reply(200, obj);\nstudentObj.getDummyEmpData().then(function (record) {\n  expect(record).to.be.eql(obj);\n  done();\n});",
              "err": {},
              "uuid": "2c092d2b-b617-4a35-a333-258a14ce3b97",
              "parentUUID": "38aa60b3-e7c9-4265-8a43-9fc2d72d86a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c092d2b-b617-4a35-a333-258a14ce3b97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d0ddd7e5-1171-4480-9f13-b79ea2cc5d15",
          "title": "Promise : Get user data",
          "fullFile": "/home/mind/practice/TEST_CASE/test/test-case/promise.spec.js",
          "file": "/test/test-case/promise.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Simple Way :check value function",
              "fullTitle": "Promise : Get user data Simple Way :check value function",
              "timedOut": false,
              "duration": 3004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// when you are using promise use done method for complete\nthis.timeout(5000); //wait for 5 sec for execution and then after execute this\nstudentObj.getDBData().then(function (result) {\n  expect(result).to.be.equal(1);\n  done();\n});",
              "err": {},
              "uuid": "26ecc611-5779-4eb4-90a8-0e29aefbd411",
              "parentUUID": "d0ddd7e5-1171-4480-9f13-b79ea2cc5d15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "chai-as-promised as Promise Way :check value function",
              "fullTitle": "Promise : Get user data chai-as-promised as Promise Way :check value function",
              "timedOut": false,
              "duration": 3003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Note : write return when\nreturn expect(studentObj.getDBData()).to.eventually.equal(1);",
              "err": {},
              "uuid": "952504d6-e097-4791-8639-c12cc0c39281",
              "parentUUID": "d0ddd7e5-1171-4480-9f13-b79ea2cc5d15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26ecc611-5779-4eb4-90a8-0e29aefbd411",
            "952504d6-e097-4791-8639-c12cc0c39281"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "acd1eb2a-a857-48e8-85f1-d1137f495873",
          "title": "SPY : Get user data",
          "fullFile": "/home/mind/practice/TEST_CASE/test/test-case/spay.spec.js",
          "file": "/test/test-case/spay.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check userID",
              "fullTitle": "SPY : Get user data check userID",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(studentObj.getuserId()).to.be.equal(12);",
              "err": {},
              "uuid": "23049ba5-4f8c-47b5-bb5c-5f1e6ce03056",
              "parentUUID": "acd1eb2a-a857-48e8-85f1-d1137f495873",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get function call count",
              "fullTitle": "SPY : Get user data get function call count",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var spyObj = sinon.spy(studentObj, \"getInfo\");\nstudentObj.home(5); //Check this method how many times call getInfo method\nexpect(spyObj.calledOnce).to.be.true; //Get 1 and test cases pass If many than failed test cases",
              "err": {},
              "uuid": "8171b795-619f-4c04-87a4-468fe26fec70",
              "parentUUID": "acd1eb2a-a857-48e8-85f1-d1137f495873",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "function arguments check",
              "fullTitle": "SPY : Get user data function arguments check",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var spyObj = sinon.spy(studentObj, \"getInfo2\");\nstudentObj.home2(5); //Check this method how many times call getInfo method\nexpect(spyObj.calledWith(5,1)).to.be.true; //Get 1 and test cases pass If many than failed test cases",
              "err": {},
              "uuid": "a7da4f75-ac2b-4ccc-a766-6d7c61398775",
              "parentUUID": "acd1eb2a-a857-48e8-85f1-d1137f495873",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23049ba5-4f8c-47b5-bb5c-5f1e6ce03056",
            "8171b795-619f-4c04-87a4-468fe26fec70",
            "a7da4f75-ac2b-4ccc-a766-6d7c61398775"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c373dc9a-69ad-4371-a931-edccd493866f",
          "title": "STUB : Get user data",
          "fullFile": "/home/mind/practice/TEST_CASE/test/test-case/stub.spec.js",
          "file": "/test/test-case/stub.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "function arguments check",
              "fullTitle": "STUB : Get user data function arguments check",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var stub = sinon.stub(studentObj, \"getExternal\");\nstub.withArgs(40).returns(5)\nexpect(studentObj.finalmarks(40)).to.be.equal(54)",
              "err": {},
              "uuid": "9e4ba306-bf8e-4cf8-8947-3ac6d657dae1",
              "parentUUID": "c373dc9a-69ad-4371-a931-edccd493866f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e4ba306-bf8e-4cf8-8947-3ac6d657dae1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "customReportFilename",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "customReportDir",
        "reportFilename": "customReportFilename"
      },
      "version": "6.2.0"
    }
  }
}